{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs22 \cf0 \CocoaLigature0 Last login: Sat Feb  6 11:13:51 on ttys000\
Sergios-MacBook-Pro:~ sgalazga$ conda create --name souperscraper beautifulsoup4\
Error: prefix already exists: //anaconda/envs/souperscraper\
Sergios-MacBook-Pro:~ sgalazga$ source activate souperscraper\
discarding //anaconda/bin from PATH\
prepending //anaconda/envs/souperscraper/bin to PATH\
(souperscraper)Sergios-MacBook-Pro:~ sgalazga$ python\
Python 2.7.11 |Continuum Analytics, Inc.| (default, Dec  6 2015, 18:57:58) \
[GCC 4.2.1 (Apple Inc. build 5577)] on darwin\
Type "help", "copyright", "credits" or "license" for more information.\
Anaconda is brought to you by Continuum Analytics.\
Please check out: http://continuum.io/thanks and https://anaconda.org\
>>> import requests\
>>> import bs4\
>>> response = requests.get('http://duspviz.mit.edu/_assets/data/sample.html')\
>>> pring response.txt\
  File "<stdin>", line 1\
    pring response.txt\
                 ^\
SyntaxError: invalid syntax\
>>> print response.txt\
Traceback (most recent call last):\
  File "<stdin>", line 1, in <module>\
AttributeError: 'Response' object has no attribute 'txt'\
>>> print response.text\
<html><head><title>Where are the rats?</title></head>\
<body>\
<p class="title"><b>Rat Incidents in Greater Boston</b></p>\
\
<p class="story">The following is rodent incident data for \
<a href="http://example.com/boston" class="link" id="link1">Boston</a>,\
<a href="http://example.com/brookline" class="link" id="link2">Brookline</a>,\
<a href="http://example.com/cambridge" class="link" id="link2">Cambridge</a>, and\
<a href="http://example.com/somerville" class="link" id="link3">Somerville</a>;\
and it only available here.</p>\
\
<table>\
	<thead>\
		<tr>\
			<th>City</th>\
			<th># of rats</th>\
		</tr>\
	</thead>\
	<tbody>\
		<tr>\
			<td class="city">Cambridge</td>\
			<td class="number">400</td>\
		</tr>\
		<tr>\
			<td class="city">Boston</td>\
			<td class="number">900</td>\
		</tr>\
		<tr>\
			<td class="city">Somerville</td>\
			<td class="number">300</td>\
		</tr>\
		<tr>\
			<td class="city">Brookline</td>\
			<td class="number">600</td>\
		</tr>\
	</tbody>\
</table>\
\
</body>\
\
>>> soup = bs4.BeautifulSoup(response.text, "html.parser")\
>>> print(soup.prettify())\
<html>\
 <head>\
  <title>\
   Where are the rats?\
  </title>\
 </head>\
 <body>\
  <p class="title">\
   <b>\
    Rat Incidents in Greater Boston\
   </b>\
  </p>\
  <p class="story">\
   The following is rodent incident data for\
   <a class="link" href="http://example.com/boston" id="link1">\
    Boston\
   </a>\
   ,\
   <a class="link" href="http://example.com/brookline" id="link2">\
    Brookline\
   </a>\
   ,\
   <a class="link" href="http://example.com/cambridge" id="link2">\
    Cambridge\
   </a>\
   , and\
   <a class="link" href="http://example.com/somerville" id="link3">\
    Somerville\
   </a>\
   ;\
and it only available here.\
  </p>\
  <table>\
   <thead>\
    <tr>\
     <th>\
      City\
     </th>\
     <th>\
      # of rats\
     </th>\
    </tr>\
   </thead>\
   <tbody>\
    <tr>\
     <td class="city">\
      Cambridge\
     </td>\
     <td class="number">\
      400\
     </td>\
    </tr>\
    <tr>\
     <td class="city">\
      Boston\
     </td>\
     <td class="number">\
      900\
     </td>\
    </tr>\
    <tr>\
     <td class="city">\
      Somerville\
     </td>\
     <td class="number">\
      300\
     </td>\
    </tr>\
    <tr>\
     <td class="city">\
      Brookline\
     </td>\
     <td class="number">\
      600\
     </td>\
    </tr>\
   </tbody>\
  </table>\
 </body>\
</html>\
>>> print data[0].string\
Traceback (most recent call last):\
  File "<stdin>", line 1, in <module>\
NameError: name 'data' is not defined\
>>> data = soup.findAll(attrs=\{'class':['city','number'[\})\
  File "<stdin>", line 1\
    data = soup.findAll(attrs=\{'class':['city','number'[\})\
                                                        ^\
SyntaxError: invalid syntax\
>>> data = soup.findAll(attrs=\{'class':['city','number']\})\
>>> print data\
[<td class="city">Cambridge</td>, <td class="number">400</td>, <td class="city">Boston</td>, <td class="number">900</td>, <td class="city">Somerville</td>, <td class="number">300</td>, <td class="city">Brookline</td>, <td class="number">600</td>]\
>>> print data[0].string\
Cambridge\
>>> f = open('rat_data11.txt', 'a')\
>>> p = 0\
>>> l = len(data)-1\
>>> \
>>> f.write("City, Number\\n")\
>>> \
>>> while p<1:\
...     f.write(data[p].string + ", ")\
...     p = p + 1\
...     f.write(data[p].string + "\\n)\
  File "<stdin>", line 4\
    f.write(data[p].string + "\\n)\
                                ^\
SyntaxError: EOL while scanning string literal\
>>>     f.write(data[p].string + "\\n")\
  File "<stdin>", line 1\
    f.write(data[p].string + "\\n")\
    ^\
IndentationError: unexpected indent\
>>> f = open('rat_data.txt','a') # open new file\
>>> \
>>> p = 0 # initial place in array\
>>> l = len(data)-1 # length of array minus one\
>>> \
>>> f.write("City, Number\\n") #write headers\
>>> \
>>> while p < l: # while place is less than length\
...     f.write(data[p].string + ", ") # write city and add comma\
...     p = p + 1 # increment\
...     f.write(data[p].string + "\\n") # write number and line break\
...     p = p + 1 # increment\
... \
>>> f.close() # close file\
>>> \
}